{
  "parents": [
    "system:cdap-etl-batch[4.1.0,5.0.0-SNAPSHOT)",
    "system:cdap-data-pipeline[4.1.0,5.0.0-SNAPSHOT)",
    "system:cdap-data-streams[4.1.0,5.0.0-SNAPSHOT)"
  ],
  "properties": {
    "widgets.SkipGramFeatureGenerator-sparkcompute": "{\"metadata\":{\"spec-version\":\"1.0\"},\"configuration-groups\":[{\"label\":\"Skip-Gram Feature Generator Properties\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"FileSet Name\",\"name\":\"fileSetName\"},{\"widget-type\":\"textbox\",\"label\":\"Path\",\"name\":\"path\"},{\"widget-type\":\"keyvalue\",\"label\":\"Fields to Transform\",\"name\":\"outputColumnMapping\",\"widget-attributes\":{\"showDelimiter\":\"false\"}},{\"widget-type\":\"textbox\",\"label\":\"Pattern to split the input string fields on\",\"name\":\"pattern\"}]}],\"outputs\":[]}",
    "widgets.SkipGramTrainer-sparksink": "{\"metadata\":{\"spec-version\":\"1.0\"},\"configuration-groups\":[{\"label\":\"Skip-Gram Trainer Properties\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"FileSet Name\",\"name\":\"fileSetName\"},{\"widget-type\":\"textbox\",\"label\":\"Path\",\"name\":\"path\"},{\"widget-type\":\"textbox\",\"label\":\"Input Column for training\",\"name\":\"inputCol\"},{\"widget-type\":\"textbox\",\"label\":\"Pattern to split the input string fields on\",\"name\":\"pattern\"},{\"widget-type\":\"number\",\"label\":\"The dimension of codes after transforming from words\",\"name\":\"vectorSize\",\"widget-attributes\":{\"default\":100,\"min\":1}},{\"widget-type\":\"number\",\"label\":\"Minimum number of times a token must appear to be included in the word2vec model's vocabulary\",\"name\":\"minCount\",\"widget-attributes\":{\"default\":1,\"min\":1}},{\"widget-type\":\"number\",\"label\":\"Number of partitions\",\"name\":\"numPartitions\",\"widget-attributes\":{\"default\":1,\"min\":0}},{\"widget-type\":\"number\",\"label\":\"Maximum number of iterations\",\"name\":\"numIterations\",\"widget-attributes\":{\"default\":1,\"min\":1}},{\"widget-type\":\"number\",\"label\":\"The window size (context words from [-window, window])\",\"name\":\"windowSize\",\"widget-attributes\":{\"default\":5,\"min\":1}}]}],\"outputs\":[]}",
    "doc.SkipGramFeatureGenerator-sparkcompute": "# SkipGramFeatureGenerator\n\n\nDescription\n-----------\nSparkCompute to generate text based feature from string using stored skip-gram model (Spark's Word2Vec).\n\nUse Case\n--------\nThis transform can be used when user has a saved Word2Vec model and wants to generate text based feature.\n\nProperties\n----------\n**fileSetName:** The name of the FileSet to load the model from.\n\n**path:** Path of the FileSet to load the model from.\n\n**outputColumnMapping:** A comma-separated list of the input fields to map to the transformed output fields. The key\nspecifies the name of the field to generate feature vector from, with its corresponding value specifying the output\ncolumn in which the vector would be emitted.\n\n**pattern:** Pattern to split the input string fields on. Default is '\\s+'.\n\n\nExample\n-------\nThis example uses saved model ``feature-generator`` to transform column ``text`` and emit the generated dense vector as\narray of double in column ``result``.\n\n    {\n        \"name\": \"FeatureGenerator\",\n        \"type\": \"sparkcompute\",\n        \"properties\": {\n            \"fileSetName\": \"feature-generator\",\n            \"path\": \"feature\",\n            \"outputColumnMapping\": \"text:result\",\n            \"pattern\": \" \"\n        }\n    }\n\nFor example, suppose the feature generator receives the input records:\n\n    +==============================================+\n    | offset |  text                               |\n    +==============================================+\n    | 1      | Spark ML plugins                    |\n    | 2      | Classes in Java                     |\n    | 3      | Logistic regression to predict data |\n    +==============================================+\n\n\nOutput records will contain all the fields along with the output fields mentioned in ``outputColumnMapping``:\n\n    +===================================================================================================================+\n    | offset |  text                               |  result                                                            |\n    +===================================================================================================================+\n    | 1      | Spark ML plugins                    |[0.040902843077977494, -0.010430609186490376, -0.04750693837801615] |\n    | 2      | Classes in Java                     |[-0.04352385476231575, 3.2448768615722656E-4, 0.02223073500208557]  |\n    | 3      | Logistic regression to predict data |[0.011901815732320149, 0.019348077476024628, -0.0074237411220868426]|\n    +===================================================================================================================+\n",
    "doc.SkipGramTrainer-sparksink": "# SkipGramTrainer\n\n\nDescription\n-----------\nSpark Sink plugin that trains a model using SkipGram (Spark's Word2Vec). Saves this model to a FileSet.\n\nUse Case\n--------\nThis sink can be used when you have a sample data and you want to use it to build a SkipGram (Spark's Word2Vec) model.\n\nProperties\n----------\n**fileSetName:** The name of the FileSet to save the model to.\n\n**path:** Path of the FileSet to save the model to.\n\n**inputCol:** Field to be used for training.\n\n**pattern:** Pattern to split the input string fields on. Default is '\\s+'.\n\n**vectorSize:** The dimension of codes after transforming from words. Default 100.\n\n**minCount:** The minimum number of times a token must appear to be included in the word2vec model's vocabulary.\nDefault is 1.\n\n**numPartitions:** Sets number of partitions. Use a small number for accuracy. Default is 1.\n\n**numIterations:** Maximum number of iterations (>= 0). Default is 1.\n\n**windowSize:** The window size (context words from [-window, window]). Default is 5.\n\n\nExample\n-------\nThis example uses the field ``text`` from the input record as input column to train the model for vector size and\nwindow size as 3. The model's vocabulary will contain words with min count 2 and number of partitions for sentences of\nwords and number of iterations as 1.\n\n    {\n        \"name\": \"FeatureTrainer\",\n        \"type\": \"sparksink\",\n        \"properties\": {\n            \"fileSetName\": \"feature-generator\",\n            \"path\": \"feature\",\n            \"inputCol\": \"text\",\n            \"pattern\": \" \",\n            \"vectorSize\": \"3\",\n            \"minCount\": \"2\",\n            \"numPartitions\": \"1\",\n            \"numIterations \": \"1\",\n            \"windowSize \": \"3\"\n        }\n    }\n"
  }
}